/*---------------------------------------------------------------------------*
 *  sflxmll.d - LIBERO dialog data definitions for sflxmll.c.                *
 *  Generated by LIBERO 2.30 on  9 Feb, 2000, 13:37.                         *
 *  Schema file used: lrschema.c.                                            *
 *---------------------------------------------------------------------------*/

/*- Symbolic constants and event numbers ------------------------------------*/

#define _LR_STOP                        0xFFFFL
#define _LR_NULL_EVENT                  -2
enum {
    terminate_event = -1,
    char_event = 0,
    close_event = 1,
    comment_event = 2,
    end_of_file_event = 3,
    error_event = 4,
    file_event = 5,
    ignore_event = 6,
    looks_like_xml_event = 7,
    name_event = 8,
    no_more_items_event = 9,
    ok_event = 10,
    open_event = 11,
    optional_items_event = 12,
    processing_event = 13,
    slash_event = 14,
    space_event = 15,
    string_event = 16
};

enum {
    _LR_defaults_state = 7,
    _LR_STATE_after_init = 0,
    _LR_STATE_getting_first_item = 1,
    _LR_STATE_getting_start_tag = 2,
    _LR_STATE_getting_content = 3,
    _LR_STATE_after_closing_item = 4,
    _LR_STATE_getting_optional_tag = 5,
    _LR_STATE_examine_first_item = 6,
    _LR_STATE_defaults = 7
};


/*- Variables used by dialog interpreter ------------------------------------*/

typedef int event_t;                    /*  Type for dialog entity           */
typedef void (fsmfunct) (void);         /*  Address of FSM function          */

static event_t
    _LR_event,                          /*  Event for state transition       */
    _LR_state,                          /*  Current dialog state             */
    _LR_savest,                         /*  Saved dialog state               */
    _LR_index,                          /*  Index into vector table          */
    the_next_event,                     /*  Next event from module           */
    the_exception_event;                /*  Exception event from module      */

static dbyte
   *_LR_vecptr;                         /*  Pointer into vector table        */

static Bool
    exception_raised;                   /*  TRUE if exception raised         */

/*- Function prototypes -----------------------------------------------------*/

#ifndef MODULE
#define MODULE  static void             /*  Libero dialog modules            */
#endif

local  raise_exception                  (event_t event);
MODULE initialise_the_program           (void);
MODULE get_external_event               (void);
MODULE open_xml_file                    (void);
MODULE initialise_xml_tree              (void);
MODULE get_content_token                (void);
MODULE close_xml_file                   (void);
MODULE free_partial_xml_tree            (void);
MODULE terminate_the_program            (void);
MODULE expect_name                      (void);
MODULE attach_new_item                  (void);
MODULE note_top_level_item              (void);
MODULE get_tag_token                    (void);
MODULE skip_rest_of_processing          (void);
MODULE skip_rest_of_comment             (void);
MODULE skip_rest_of_section             (void);
MODULE skip_spaces                      (void);
MODULE report_no_xml                    (void);
MODULE return_error_feedback            (void);
MODULE expect_equals_token              (void);
MODULE expect_literal                   (void);
MODULE attach_new_attribute             (void);
MODULE expect_close                     (void);
MODULE close_the_item                   (void);
MODULE check_for_open_item              (void);
MODULE collect_item_value               (void);
MODULE confirm_item_name                (void);
MODULE remove_values_if_all_white_space (void);
MODULE expect_end_of_file               (void);
MODULE unexpected_token_error           (void);

/*- Static areas ------------------------------------------------------------*/

static dbyte _LR_nextst [][17] =
{
    { 0,0,0,0,0,1,0,6,0,0,0,0,0,0,0,0,1 },
    { 0,0,1,1,0,0,1,0,0,0,0,2,0,1,0,1,0 },
    { 0,3,2,0,0,0,0,0,2,0,0,0,0,0,4,0,0 },
    { 3,4,3,0,0,0,3,0,0,0,0,2,0,3,0,3,0 },
    { 0,0,0,0,0,0,0,0,0,4,3,0,5,0,0,0,0 },
    { 0,0,5,5,0,0,5,0,0,0,0,2,0,5,0,5,0 },
    { 6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6 },
    { 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7 }
};

static dbyte _LR_action [][17] =
{
    { 0,0,0,0,4,1,0,3,0,0,0,0,0,0,0,0,2 },
    { 0,0,7,10,0,0,8,0,0,0,0,5,0,6,0,9,0 },
    { 0,12,14,0,0,0,0,0,11,0,0,0,0,0,13,0,0 },
    { 16,17,7,0,0,0,8,0,0,0,0,15,0,6,0,16,0 },
    { 0,0,0,0,0,0,0,0,0,18,12,0,12,0,0,0,0 },
    { 0,0,7,19,0,0,8,0,0,0,0,5,0,6,0,9,0 },
    { 20,20,20,20,20,20,20,20,20,20,20,20,20,19,20,20,20 },
    { 22,22,22,22,21,22,22,22,22,22,22,22,22,22,22,22,22 }
};

static dbyte _LR_vector [][6+1] =
{
    {0},
    {0,1,2,_LR_STOP},
    {1,2,_LR_STOP},
    {0,2,_LR_STOP},
    {3,4,5,_LR_STOP},
    {6,7,8,9,_LR_STOP},
    {10,2,_LR_STOP},
    {11,2,_LR_STOP},
    {12,2,_LR_STOP},
    {13,2,_LR_STOP},
    {14,3,15,5,_LR_STOP},
    {16,17,18,9,_LR_STOP},
    {2,_LR_STOP},
    {19,20,21,_LR_STOP},
    {11,9,_LR_STOP},
    {6,7,9,_LR_STOP},
    {22,2,_LR_STOP},
    {6,23,24,20,19,21,_LR_STOP},
    {25,3,5,_LR_STOP},
    {3,5,_LR_STOP},
    {3,15,5,_LR_STOP},
    {3,4,15,5,_LR_STOP},
    {26,_LR_STOP}
};

static fsmfunct *_LR_module [] =
{
    open_xml_file,
    initialise_xml_tree,
    get_content_token,
    close_xml_file,
    free_partial_xml_tree,
    terminate_the_program,
    expect_name,
    attach_new_item,
    note_top_level_item,
    get_tag_token,
    skip_rest_of_processing,
    skip_rest_of_comment,
    skip_rest_of_section,
    skip_spaces,
    report_no_xml,
    return_error_feedback,
    expect_equals_token,
    expect_literal,
    attach_new_attribute,
    expect_close,
    close_the_item,
    check_for_open_item,
    collect_item_value,
    confirm_item_name,
    remove_values_if_all_white_space,
    expect_end_of_file,
    unexpected_token_error
};

