#
#   MS-DOS makefile for iMatix SFL Package; compatible with nmake.
#
#   Generated by Otto v2.2 from buildsfl.txt on 100/04/01, 16:33:28
#   For more info see Otto documentation at http://www.imatix.com.
#   Bug reports & questions to <ewen@imatix.com>
#   ---------------------------------------------------------------
#

#   Default values for library, executable and object extensions.
#
LIB     = .lib
EXE     = .exe
OBJ     = .obj

#   Configuration options
#
#   The makefile is configured to use the iMatix "c" batch file to compile
#   link, and archive, to enhance portability.  That batch file contains all
#   compile, link, and archive options.
#
C       = c
LR      = lr
MAKEDEP = makedepend

#   Libraries -- these are the ones that should always cause a relink if they
#   are updated (the executables in a makefile will also depend on any
#   libraries that are built in that Makefile).
#
LIBRARIES =

#   Implicit rules
#

#   Reset the suffixes that will be considered to just our own list.
#
#   Unix make programs use the .SUFFIXES psuedo rule for this

.SUFFIXES:
.SUFFIXES: $(EXE) $(LIB) $(OBJ) .c .d .i .l

#   Objects depend on source files with the same name; and are compiled
#   with the iMatix c script without any arguments.
#
.c$(OBJ):
	$(C) $<

#   .d and .i files do depend on .l files (these are the ones that Libero
#   will build).
#
.l.d:
	$(LR) $<

.l.i:
	$(LR) $<

#
#   Default rule -- all depends on everything.
#   We do this so that we can define the rule at the end.
#
all: everything

#---------------------------------------------------------------------------
libsfl$(LIB)(sflbits$(OBJ)): sflbits$(OBJ)
	$(C) -r libsfl$(LIB) sflbits$(OBJ)

libsfl$(LIB)(sflhttp$(OBJ)): sflhttp$(OBJ)
	$(C) -r libsfl$(LIB) sflhttp$(OBJ)

libsfl$(LIB)(sflcomp$(OBJ)): sflcomp$(OBJ)
	$(C) -r libsfl$(LIB) sflcomp$(OBJ)

libsfl$(LIB)(sflcons$(OBJ)): sflcons$(OBJ)
	$(C) -r libsfl$(LIB) sflcons$(OBJ)

libsfl$(LIB)(sflcryp$(OBJ)): sflcryp$(OBJ)
	$(C) -r libsfl$(LIB) sflcryp$(OBJ)

libsfl$(LIB)(sflcvbs$(OBJ)): sflcvbs$(OBJ)
	$(C) -r libsfl$(LIB) sflcvbs$(OBJ)

libsfl$(LIB)(sflcvdp$(OBJ)): sflcvdp$(OBJ)
	$(C) -r libsfl$(LIB) sflcvdp$(OBJ)

libsfl$(LIB)(sflcvds$(OBJ)): sflcvds$(OBJ)
	$(C) -r libsfl$(LIB) sflcvds$(OBJ)

libsfl$(LIB)(sflcvns$(OBJ)): sflcvns$(OBJ)
	$(C) -r libsfl$(LIB) sflcvns$(OBJ)

libsfl$(LIB)(sflcvsb$(OBJ)): sflcvsb$(OBJ)
	$(C) -r libsfl$(LIB) sflcvsb$(OBJ)

libsfl$(LIB)(sflcvsd$(OBJ)): sflcvsd$(OBJ)
	$(C) -r libsfl$(LIB) sflcvsd$(OBJ)

libsfl$(LIB)(sflcvsn$(OBJ)): sflcvsn$(OBJ)
	$(C) -r libsfl$(LIB) sflcvsn$(OBJ)

libsfl$(LIB)(sflcvst$(OBJ)): sflcvst$(OBJ)
	$(C) -r libsfl$(LIB) sflcvst$(OBJ)

libsfl$(LIB)(sflcvtp$(OBJ)): sflcvtp$(OBJ)
	$(C) -r libsfl$(LIB) sflcvtp$(OBJ)

libsfl$(LIB)(sflcvts$(OBJ)): sflcvts$(OBJ)
	$(C) -r libsfl$(LIB) sflcvts$(OBJ)

libsfl$(LIB)(sflconv$(OBJ)): sflconv$(OBJ)
	$(C) -r libsfl$(LIB) sflconv$(OBJ)

libsfl$(LIB)(sfldate$(OBJ)): sfldate$(OBJ)
	$(C) -r libsfl$(LIB) sfldate$(OBJ)

libsfl$(LIB)(sfldbio$(OBJ)): sfldbio$(OBJ)
	$(C) -r libsfl$(LIB) sfldbio$(OBJ)

libsfl$(LIB)(sfldir$(OBJ)): sfldir$(OBJ)
	$(C) -r libsfl$(LIB) sfldir$(OBJ)

libsfl$(LIB)(sflenv$(OBJ)): sflenv$(OBJ)
	$(C) -r libsfl$(LIB) sflenv$(OBJ)

libsfl$(LIB)(sflexdr$(OBJ)): sflexdr$(OBJ)
	$(C) -r libsfl$(LIB) sflexdr$(OBJ)

libsfl$(LIB)(sflfile$(OBJ)): sflfile$(OBJ)
	$(C) -r libsfl$(LIB) sflfile$(OBJ)

libsfl$(LIB)(sflfind$(OBJ)): sflfind$(OBJ)
	$(C) -r libsfl$(LIB) sflfind$(OBJ)

libsfl$(LIB)(sflfort$(OBJ)): sflfort$(OBJ)
	$(C) -r libsfl$(LIB) sflfort$(OBJ)

libsfl$(LIB)(sflini$(OBJ)): sflini$(OBJ)
	$(C) -r libsfl$(LIB) sflini$(OBJ)

libsfl$(LIB)(sfllang$(OBJ)): sfllang$(OBJ)
	$(C) -r libsfl$(LIB) sfllang$(OBJ)

libsfl$(LIB)(sfllbuf$(OBJ)): sfllbuf$(OBJ)
	$(C) -r libsfl$(LIB) sfllbuf$(OBJ)

libsfl$(LIB)(sfllist$(OBJ)): sfllist$(OBJ)
	$(C) -r libsfl$(LIB) sfllist$(OBJ)

libsfl$(LIB)(sflmail$(OBJ)): sflmail$(OBJ)
	$(C) -r libsfl$(LIB) sflmail$(OBJ)

libsfl$(LIB)(sflmath$(OBJ)): sflmath$(OBJ)
	$(C) -r libsfl$(LIB) sflmath$(OBJ)

libsfl$(LIB)(sflmem$(OBJ)): sflmem$(OBJ)
	$(C) -r libsfl$(LIB) sflmem$(OBJ)

libsfl$(LIB)(sflmesg$(OBJ)): sflmesg$(OBJ)
	$(C) -r libsfl$(LIB) sflmesg$(OBJ)

libsfl$(LIB)(sflmime$(OBJ)): sflmime$(OBJ)
	$(C) -r libsfl$(LIB) sflmime$(OBJ)

libsfl$(LIB)(sflmysql$(OBJ)): sflmysql$(OBJ)
	$(C) -r libsfl$(LIB) sflmysql$(OBJ)

libsfl$(LIB)(sflnode$(OBJ)): sflnode$(OBJ)
	$(C) -r libsfl$(LIB) sflnode$(OBJ)

libsfl$(LIB)(sflproc$(OBJ)): sflproc$(OBJ)
	$(C) -r libsfl$(LIB) sflproc$(OBJ)

libsfl$(LIB)(sflprint$(OBJ)): sflprint$(OBJ)
	$(C) -r libsfl$(LIB) sflprint$(OBJ)

libsfl$(LIB)(sflslot$(OBJ)): sflslot$(OBJ)
	$(C) -r libsfl$(LIB) sflslot$(OBJ)

libsfl$(LIB)(sflsock$(OBJ)): sflsock$(OBJ)
	$(C) -r libsfl$(LIB) sflsock$(OBJ)

libsfl$(LIB)(sflstr$(OBJ)): sflstr$(OBJ)
	$(C) -r libsfl$(LIB) sflstr$(OBJ)

libsfl$(LIB)(sflsymb$(OBJ)): sflsymb$(OBJ)
	$(C) -r libsfl$(LIB) sflsymb$(OBJ)

libsfl$(LIB)(sflsyst$(OBJ)): sflsyst$(OBJ)
	$(C) -r libsfl$(LIB) sflsyst$(OBJ)

libsfl$(LIB)(sfltok$(OBJ)): sfltok$(OBJ)
	$(C) -r libsfl$(LIB) sfltok$(OBJ)

libsfl$(LIB)(sfltree$(OBJ)): sfltree$(OBJ)
	$(C) -r libsfl$(LIB) sfltree$(OBJ)

libsfl$(LIB)(sfltron$(OBJ)): sfltron$(OBJ)
	$(C) -r libsfl$(LIB) sfltron$(OBJ)

libsfl$(LIB)(sfluid$(OBJ)): sfluid$(OBJ)
	$(C) -r libsfl$(LIB) sfluid$(OBJ)

libsfl$(LIB)(sflxml$(OBJ)): sflxml$(OBJ)
	$(C) -r libsfl$(LIB) sflxml$(OBJ)

libsfl$(LIB)(sflxmll$(OBJ)): sflxmll$(OBJ)
	$(C) -r libsfl$(LIB) sflxmll$(OBJ)

LIBSFL_LIST = libsfl$(LIB)(sflbits$(OBJ)) libsfl$(LIB)(sflhttp$(OBJ)) libsfl$(LIB)(sflcomp$(OBJ)) libsfl$(LIB)(sflcons$(OBJ)) libsfl$(LIB)(sflcryp$(OBJ)) libsfl$(LIB)(sflcvbs$(OBJ)) libsfl$(LIB)(sflcvdp$(OBJ)) libsfl$(LIB)(sflcvds$(OBJ)) libsfl$(LIB)(sflcvns$(OBJ)) libsfl$(LIB)(sflcvsb$(OBJ)) libsfl$(LIB)(sflcvsd$(OBJ)) libsfl$(LIB)(sflcvsn$(OBJ)) libsfl$(LIB)(sflcvst$(OBJ)) libsfl$(LIB)(sflcvtp$(OBJ)) libsfl$(LIB)(sflcvts$(OBJ)) libsfl$(LIB)(sflconv$(OBJ)) libsfl$(LIB)(sfldate$(OBJ)) libsfl$(LIB)(sfldbio$(OBJ)) libsfl$(LIB)(sfldir$(OBJ)) libsfl$(LIB)(sflenv$(OBJ)) libsfl$(LIB)(sflexdr$(OBJ)) libsfl$(LIB)(sflfile$(OBJ)) libsfl$(LIB)(sflfind$(OBJ)) libsfl$(LIB)(sflfort$(OBJ)) libsfl$(LIB)(sflini$(OBJ)) libsfl$(LIB)(sfllang$(OBJ)) libsfl$(LIB)(sfllbuf$(OBJ)) libsfl$(LIB)(sfllist$(OBJ)) libsfl$(LIB)(sflmail$(OBJ)) libsfl$(LIB)(sflmath$(OBJ)) libsfl$(LIB)(sflmem$(OBJ)) libsfl$(LIB)(sflmesg$(OBJ)) libsfl$(LIB)(sflmime$(OBJ)) libsfl$(LIB)(sflmysql$(OBJ)) libsfl$(LIB)(sflnode$(OBJ)) libsfl$(LIB)(sflproc$(OBJ)) libsfl$(LIB)(sflprint$(OBJ)) libsfl$(LIB)(sflslot$(OBJ)) libsfl$(LIB)(sflsock$(OBJ)) libsfl$(LIB)(sflstr$(OBJ)) libsfl$(LIB)(sflsymb$(OBJ)) libsfl$(LIB)(sflsyst$(OBJ)) libsfl$(LIB)(sfltok$(OBJ)) libsfl$(LIB)(sfltree$(OBJ)) libsfl$(LIB)(sfltron$(OBJ)) libsfl$(LIB)(sfluid$(OBJ)) libsfl$(LIB)(sflxml$(OBJ)) libsfl$(LIB)(sflxmll$(OBJ))

# Force the library to be dependant on its bits.
#
libsfl$(LIB): $(LIBSFL_LIST)

testall$(EXE): testall$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testall

testbits$(EXE): testbits$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testbits

testcomp$(EXE): testcomp$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testcomp

testconv$(EXE): testconv$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testconv

testcryp$(EXE): testcryp$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testcryp

testdate$(EXE): testdate$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testdate

testdes$(EXE): testdes$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testdes

testexdr$(EXE): testexdr$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testexdr

testfind$(EXE): testfind$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testfind

testmem$(EXE): testmem$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testmem

testmime$(EXE): testmime$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testmime

testsym$(EXE): testsym$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testsym

testtree$(EXE): testtree$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testtree

testuid$(EXE): testuid$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testuid

testcgi$(EXE): testcgi$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testcgi

testdir$(EXE): testdir$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testdir

teststr$(EXE): teststr$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L teststr

testxml$(EXE): testxml$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testxml

testtron$(EXE): testtron$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testtron

testfort$(EXE): testfort$(OBJ) $(LIBRARIES) libsfl$(LIB)
	$(C) -L testfort

everything: libsfl$(LIB) testall$(EXE) testbits$(EXE) testcomp$(EXE) testconv$(EXE) testcryp$(EXE) testdate$(EXE) testdes$(EXE) testexdr$(EXE) testfind$(EXE) testmem$(EXE) testmime$(EXE) testsym$(EXE) testtree$(EXE) testuid$(EXE) testcgi$(EXE) testdir$(EXE) teststr$(EXE) testxml$(EXE) testtron$(EXE) testfort$(EXE)

SRCS = sflbits.c sflhttp.c sflcomp.c sflcons.c sflcryp.c sflcvbs.c sflcvdp.c sflcvds.c sflcvns.c sflcvsb.c sflcvsd.c sflcvsn.c sflcvst.c sflcvtp.c sflcvts.c sflconv.c sfldate.c sfldbio.c sfldir.c sflenv.c sflexdr.c sflfile.c sflfind.c sflfort.c sflini.c sfllang.c sfllbuf.c sfllist.c sflmail.c sflmath.c sflmem.c sflmesg.c sflmime.c sflmysql.c sflnode.c sflproc.c sflprint.c sflslot.c sflsock.c sflstr.c sflsymb.c sflsyst.c sfltok.c sfltree.c sfltron.c sfluid.c sflxml.c sflxmll.c testall.c testbits.c testcomp.c testconv.c testcryp.c testdate.c testdes.c testexdr.c testfind.c testmem.c testmime.c testsym.c testtree.c testuid.c testcgi.c testdir.c teststr.c testxml.c testtron.c testfort.c

